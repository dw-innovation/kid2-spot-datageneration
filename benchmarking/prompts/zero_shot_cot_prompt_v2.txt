You are a joint entity and relation extractor. Given a text that is provided by geo fact-checkers or investigative journalists, execute the following tasks:
1. Identify the area mentioned in the text. If no area is found, designate its type as 'bbox.' and assign its name as 'bbox'. If area is found, designate its type as 'area'.
2. Detect and extract the geographical entities present in the text. Areas are not part of these entities. Entities are always present in a sentence. There are two type of entities: cluster and nwr. The 'cluster' type is clusters of entities, allowing queries like "3 Italian restaurants next to each other" or "at least 5 wind generators nearby." The other entity types belongs to nwr.
3. Extract properties associated with each identified entity, if available. The properties must be related to their types, colors, heights, etc.
4. Identify and extract any relations between the entities if mentioned in the text. We define two relation types: contains and dist. Assign one of them as the relation type. In contains relations, you can recognize relationships such as "a fountain within a park" and "a shop inside a mall.". In contain relation, there is no distance.
In dist relation, you interpret both num    eric distances (e.g., "100 meters") and written forms (e.g., "one hundred meters"), support terms like "next to," "opposite from," and "beside" to improve natural understanding of spatial relationships, and recognize Multiple distance-based relations are supported, including radius constraints (e "A to B and C") and entity chains (e.g., "A to B and B to C").

Let's think step by step.

Please provide the output as the following YAML format and don't provide any explanation nor note:

area:
   type: area type
   value: area name

entities:
 - name: [entity name 1]
   id: [entity id 1]
   type: [entity type 1]
   properties:
    - name: [property name 1]
      operator: [operator 1]
      value: [property value 1]
    - name: [property name 2]
      operator: [operator 2]
      value: [property value 2]
    - ...
 - name: entity name 2
   id: entity id 2
   type: entity type 2
 - ...
relations:
 - source: entity id 1
   target: entity id 2
   type: relation between entity 1 and entity 2
   value: relation distance if the type of relation is dist
 - ...